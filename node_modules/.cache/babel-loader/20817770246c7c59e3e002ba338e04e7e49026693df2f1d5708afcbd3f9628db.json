{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { TagsWithInnerContent, SelfClosingTags } from '@unhead/shared';\nfunction encodeAttribute(value) {\n  return String(value).replace(/\"/g, \"&quot;\");\n}\nfunction propsToString(props) {\n  const attrs = [];\n  for (const [key, value] of Object.entries(props)) {\n    if (value !== false && value !== null) attrs.push(value === true ? key : `${key}=\"${encodeAttribute(value)}\"`);\n  }\n  return `${attrs.length > 0 ? \" \" : \"\"}${attrs.join(\" \")}`;\n}\nfunction escapeHtml(str) {\n  return str.replace(/[&<>\"'/]/g, char => {\n    switch (char) {\n      case \"&\":\n        return \"&amp;\";\n      case \"<\":\n        return \"&lt;\";\n      case \">\":\n        return \"&gt;\";\n      case '\"':\n        return \"&quot;\";\n      case \"'\":\n        return \"&#x27;\";\n      case \"/\":\n        return \"&#x2F;\";\n      default:\n        return char;\n    }\n  });\n}\nfunction tagToString(tag) {\n  const attrs = propsToString(tag.props);\n  const openTag = `<${tag.tag}${attrs}>`;\n  if (!TagsWithInnerContent.includes(tag.tag)) return SelfClosingTags.includes(tag.tag) ? openTag : `${openTag}</${tag.tag}>`;\n  let content = String(tag.innerHTML || \"\");\n  if (tag.textContent) content = escapeHtml(String(tag.textContent));\n  return SelfClosingTags.includes(tag.tag) ? openTag : `${openTag}${content}</${tag.tag}>`;\n}\nfunction ssrRenderTags(tags, options) {\n  const schema = {\n    htmlAttrs: {},\n    bodyAttrs: {},\n    tags: {\n      head: [],\n      bodyClose: [],\n      bodyOpen: []\n    }\n  };\n  for (const tag of tags) {\n    if (tag.tag === \"htmlAttrs\" || tag.tag === \"bodyAttrs\") {\n      schema[tag.tag] = {\n        ...schema[tag.tag],\n        ...tag.props\n      };\n      continue;\n    }\n    schema.tags[tag.tagPosition || \"head\"].push(tagToString(tag));\n  }\n  const lineBreaks = !options?.omitLineBreaks ? \"\\n\" : \"\";\n  return {\n    headTags: schema.tags.head.join(lineBreaks),\n    bodyTags: schema.tags.bodyClose.join(lineBreaks),\n    bodyTagsOpen: schema.tags.bodyOpen.join(lineBreaks),\n    htmlAttrs: propsToString(schema.htmlAttrs),\n    bodyAttrs: propsToString(schema.bodyAttrs)\n  };\n}\nasync function renderSSRHead(head, options) {\n  const beforeRenderCtx = {\n    shouldRender: true\n  };\n  await head.hooks.callHook(\"ssr:beforeRender\", beforeRenderCtx);\n  if (!beforeRenderCtx.shouldRender) {\n    return {\n      headTags: \"\",\n      bodyTags: \"\",\n      bodyTagsOpen: \"\",\n      htmlAttrs: \"\",\n      bodyAttrs: \"\"\n    };\n  }\n  const ctx = {\n    tags: await head.resolveTags()\n  };\n  await head.hooks.callHook(\"ssr:render\", ctx);\n  const html = ssrRenderTags(ctx.tags, options);\n  const renderCtx = {\n    tags: ctx.tags,\n    html\n  };\n  await head.hooks.callHook(\"ssr:rendered\", renderCtx);\n  return renderCtx.html;\n}\nexport { escapeHtml, propsToString, renderSSRHead, ssrRenderTags, tagToString };","map":{"version":3,"names":["TagsWithInnerContent","SelfClosingTags","encodeAttribute","value","String","replace","propsToString","props","attrs","key","Object","entries","push","length","join","escapeHtml","str","char","tagToString","tag","openTag","includes","content","innerHTML","textContent","ssrRenderTags","tags","options","schema","htmlAttrs","bodyAttrs","head","bodyClose","bodyOpen","tagPosition","lineBreaks","omitLineBreaks","headTags","bodyTags","bodyTagsOpen","renderSSRHead","beforeRenderCtx","shouldRender","hooks","callHook","ctx","resolveTags","html","renderCtx"],"sources":["C:/Users/kacpe/Desktop/Praca/projects/kormix/node_modules/@unhead/ssr/dist/index.mjs"],"sourcesContent":["import { TagsWithInnerContent, SelfClosingTags } from '@unhead/shared';\n\nfunction encodeAttribute(value) {\n  return String(value).replace(/\"/g, \"&quot;\");\n}\nfunction propsToString(props) {\n  const attrs = [];\n  for (const [key, value] of Object.entries(props)) {\n    if (value !== false && value !== null)\n      attrs.push(value === true ? key : `${key}=\"${encodeAttribute(value)}\"`);\n  }\n  return `${attrs.length > 0 ? \" \" : \"\"}${attrs.join(\" \")}`;\n}\n\nfunction escapeHtml(str) {\n  return str.replace(/[&<>\"'/]/g, (char) => {\n    switch (char) {\n      case \"&\":\n        return \"&amp;\";\n      case \"<\":\n        return \"&lt;\";\n      case \">\":\n        return \"&gt;\";\n      case '\"':\n        return \"&quot;\";\n      case \"'\":\n        return \"&#x27;\";\n      case \"/\":\n        return \"&#x2F;\";\n      default:\n        return char;\n    }\n  });\n}\nfunction tagToString(tag) {\n  const attrs = propsToString(tag.props);\n  const openTag = `<${tag.tag}${attrs}>`;\n  if (!TagsWithInnerContent.includes(tag.tag))\n    return SelfClosingTags.includes(tag.tag) ? openTag : `${openTag}</${tag.tag}>`;\n  let content = String(tag.innerHTML || \"\");\n  if (tag.textContent)\n    content = escapeHtml(String(tag.textContent));\n  return SelfClosingTags.includes(tag.tag) ? openTag : `${openTag}${content}</${tag.tag}>`;\n}\n\nfunction ssrRenderTags(tags, options) {\n  const schema = { htmlAttrs: {}, bodyAttrs: {}, tags: { head: [], bodyClose: [], bodyOpen: [] } };\n  for (const tag of tags) {\n    if (tag.tag === \"htmlAttrs\" || tag.tag === \"bodyAttrs\") {\n      schema[tag.tag] = { ...schema[tag.tag], ...tag.props };\n      continue;\n    }\n    schema.tags[tag.tagPosition || \"head\"].push(tagToString(tag));\n  }\n  const lineBreaks = !options?.omitLineBreaks ? \"\\n\" : \"\";\n  return {\n    headTags: schema.tags.head.join(lineBreaks),\n    bodyTags: schema.tags.bodyClose.join(lineBreaks),\n    bodyTagsOpen: schema.tags.bodyOpen.join(lineBreaks),\n    htmlAttrs: propsToString(schema.htmlAttrs),\n    bodyAttrs: propsToString(schema.bodyAttrs)\n  };\n}\n\nasync function renderSSRHead(head, options) {\n  const beforeRenderCtx = { shouldRender: true };\n  await head.hooks.callHook(\"ssr:beforeRender\", beforeRenderCtx);\n  if (!beforeRenderCtx.shouldRender) {\n    return {\n      headTags: \"\",\n      bodyTags: \"\",\n      bodyTagsOpen: \"\",\n      htmlAttrs: \"\",\n      bodyAttrs: \"\"\n    };\n  }\n  const ctx = { tags: await head.resolveTags() };\n  await head.hooks.callHook(\"ssr:render\", ctx);\n  const html = ssrRenderTags(ctx.tags, options);\n  const renderCtx = { tags: ctx.tags, html };\n  await head.hooks.callHook(\"ssr:rendered\", renderCtx);\n  return renderCtx.html;\n}\n\nexport { escapeHtml, propsToString, renderSSRHead, ssrRenderTags, tagToString };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}